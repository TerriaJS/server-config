{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Vector tile server stack. Launches EC2 t2.micro instance with Amazon linux AMI and installs relevant packages",
  "Metadata": {},
  "Outputs": {
    "URL": {
      "Value": {"Fn::Sub": "${AWS::StackName}.${HostedZoneName}"}
    },
    "Alias": {
      "Value": {"Ref": "Alias"}
    }
  },
  "Parameters": {
    "Ec2Type": {
      "Default": "t2.micro",
      "Type": "String"
    },
    "HostedZoneName": {
      "Default": "terria.io.",
      "Type": "String"
    },
    "Alias": {
      "Default": "",
      "Type": "String"
    },
    "WebServerPort": {
      "Default": 8000,
      "Type": "Number"
    },
    "StartupGracePeriod": {
      "Default": 600,
      "Type": "Number"
    }
  },
  "Conditions": {
    "CreateAlias": {"Fn::Not": [{"Fn::Equals": [{"Ref": "Alias"},""]}]}
  },
  "Resources": {
    "AutoScalingGroup": {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
      "AvailabilityZones" : {"Fn::GetAZs" : ""},
      "HealthCheckGracePeriod": {"Ref": "StartupGracePeriod"},
      "HealthCheckType": "ELB",
      "LaunchConfigurationName" : {"Ref" : "AutoScalingConfiguration"},
      "MinSize" : "1",
      "MaxSize" : "3",
      "LoadBalancerNames" : [{"Ref" : "LoadBalancer"}]
      }
    },
    "AutoScalingConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "InstanceType": {"Ref": "Ec2Type"},
        "SecurityGroups": ["crisp-vector-tiles"],
        "KeyName": "terria-crisp",
        "ImageId": "ami-55d4e436",
        "IamInstanceProfile" : {"Ref": "S3InstanceProfile"},
        "UserData": "{~BASE64 USER DATA~}"
      }
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "AvailabilityZones": {"Fn::GetAZs": ""},
        "CrossZone": "true",
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "30",
          "Target": {"Fn::Sub": "HTTP:${WebServerPort}/ping"},
          "Timeout": "10",
          "UnhealthyThreshold": "5"
        },
        "Listeners": [
          {
            "InstancePort": {"Ref": "WebServerPort"},
            "LoadBalancerPort": "80",
            "Protocol": "HTTP"
          },
          {
            "InstancePort": {"Ref": "WebServerPort"},
            "LoadBalancerPort": "443",
            "Protocol": "HTTPS",
            "SSLCertificateId": "arn:aws:iam::278900443360:server-certificate/terra.io-20151208"
          }
        ]
      }
    },
    "S3InstanceProfile": {
      "Properties": {
        "Path": "/",
        "Roles": [ {"Ref": "S3Role"} ]
      },
      "Type": "AWS::IAM::InstanceProfile"
    },
    "S3Role": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": ["sts:AssumeRole"],
              "Effect": "Allow",
              "Principal": {
                "Service": ["ec2.amazonaws.com"]
              }
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": ["s3:Get*", "s3:List*"],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": "S3Read"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "DnsRecord" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
         "HostedZoneName" : {"Ref" : "HostedZoneName"},
         "Comment" : "DNS name for my instance.",
         "Name" : {"Fn::Sub": "${AWS::StackName}.${HostedZoneName}"},
         "Type" : "A",
         "AliasTarget": {
           "HostedZoneId": {"Fn::GetAtt": ["LoadBalancer", "CanonicalHostedZoneNameID"]},
           "DNSName": {"Fn::GetAtt": ["LoadBalancer", "CanonicalHostedZoneName"]}
         }
      }
    },
    "DnsAlias" : {
      "Type" : "AWS::Route53::RecordSet",
      "Condition": "CreateAlias",
      "Properties" : {
         "HostedZoneName" : {"Ref" : "HostedZoneName"},
         "Name" : {"Fn::Sub": "${Alias}.${HostedZoneName}"},
         "Type" : "A",
         "AliasTarget": {
           "HostedZoneId": "Z2491Y48OYT7ZO",
           "DNSName": {"Fn::Sub": "${AWS::StackName}.${HostedZoneName}"}
         }
      }
    }
  }
}